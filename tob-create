#!/bin/bash
#set -x
#set -v
if [[ "$1" != "" && "$2" != "" && "$3" != "" && "$4" != "" && "$5" != "" && "$6" != "" && "$7" != "" && "$8" != "" && "$9" != "" && "${10}" != "" ]]
then
  case "$1" in
    -u|--adminid)
      ADMINID="$2"
    ;;
    -p|--adminpwd)
      ADMINPWD="$2"
    ;;
    -s|--server)
      SERVER="$2"
    ;;
    -f|--file)
      INPUT="$2"
    ;;
    -r|--result)
      RESULT="$2"
    ;;
    *)
      echo "$0 -u|--adminid <adminid> -p|--adminpwd <adminpwd> -s|--server <api.domain.com> -f|--file <user_list.csv file> -r|--result <output result.csv>"
      exit 1
    ;;
  esac

  case "$3" in
    -u|--adminid)
      ADMINID="$4"
    ;;
    -p|--adminpwd)
      ADMINPWD="$4"
    ;;
    -s|--server)
      SERVER="$4"
    ;;
    -f|--file)
      INPUT="$4"
    ;;
    -r|--result)
      RESULT="$4"
    ;;
    *)
      echo "$0 -u|--adminid <adminid> -p|--adminpwd <adminpwd> -s|--server <api.domain.com> -f|--file <user_list.csv file> -r|--result <output result.csv>"
      exit 1
    ;;
  esac

  case "$5" in
    -u|--adminid)
      ADMINID="$6"
    ;;
    -p|--adminpwd)
      ADMINPWD="$6"
    ;;
    -s|--server)
      SERVER="$6"
    ;;
    -f|--file)
      INPUT="$6"
    ;;
    -r|--result)
      RESULT="$6"
    ;;
    *)
      echo "$0 -u|--adminid <adminid> -p|--adminpwd <adminpwd> -s|--server <api.domain.com> -f|--file <user_list.csv file> -r|--result <output result.csv>"
      exit 1
    ;;
  esac

  case "$7" in
    -u|--adminid)
      ADMINID="$8"
    ;;
    -p|--adminpwd)
      ADMINPWD="$8"
    ;;
    -s|--server)
      SERVER="$8"
    ;;
    -f|--file)
      INPUT="$8"
    ;;
    -r|--result)
      RESULT="$8"
    ;;
    *)
      echo "$0 -u|--adminid <adminid> -p|--adminpwd <adminpwd> -s|--server <api.domain.com> -f|--file <user_list.csv file> -r|--result <output result.csv>"
      exit 1
    ;;
  esac

  case "$9" in
    -u|--adminid)
      ADMINID="${10}"
    ;;
    -p|--adminpwd)
      ADMINPWD="${10}"
    ;;
    -s|--server)
      SERVER="${10}"
    ;;
    -f|--file)
      INPUT="${10}"
    ;;
    -r|--result)
      RESULT="${10}"
    ;;
    *)
      echo "$0 -u|--adminid <adminid> -p|--adminpwd <adminpwd> -s|--server <api.domain.com> -f|--file <user_list.csv file> -r|--result <output result.csv>"
      exit 1
    ;;
  esac
fi
while [ "$#" -le 9 ]; do
  echo "$0 -u|--adminid <adminid> -p|--adminpwd <adminpwd> -s|--server <api.domain.com> -f|--file <user_list.csv file> -r|--result <output result.csv>"
  exit
done

[ -d "$PWD/.tob" ] && echo "TAS onborading user working dirctory is exsit..." || mkdir -p "$PWD/.tob"
[ -f "$PWD/.tob/tob.conf" ] && source "$PWD/.tob/tob.conf"  || { echo "the tob.conf file is not exsit" ; exit 1 ; }
echo -e "Item,Fist Name,Last Name,eMail,Password,Enabled" > "$RESULT"
[ -z $COMMAND ] && { echo "not able to find command $COMMAND in the system"; exit 1 ; }

$COMMAND api $SERVER 
$COMMAND login -u $ADMINID -p $ADMINPWD -o system -s system
$COMMAND target
$COMMAND quotas
#$COMMAND update-org-quota default -m 10G -i 10G -r 10 -s 10 -a 10 --allow-paid-service-plans --reserved-route-ports 10

exec < "$INPUT" || { echo "the input file $INPUT is not exist"; exit 1; }
read header
while IFS=, read -r ITEM FNAME LNAME EMAIL PASSWORD STATUS; do
STATUS=$(echo "$STATUS" | tr -d '\r')

if [ "$STATUS" == "yes" ] && [ ! -z "$EMAIL" ] && [ ! -z "$FNAME" ] && [ ! -z "$LNAME" ]; then
  [ -z "$PASSWORD" ] && PASSWORD="$(dd if=/dev/urandom count=1 2> /dev/null | uuencode -m - | sed -ne 2p | cut -c-8)"
  USERID="$EMAIL"
  ORGID="$USERID"
  SPACEID="$USERID"
  PASSWORD="$USERID"
#  $COMMAND delete-org -f $ORGID
  $COMMAND $CREATE_ORG $ORGID -q default
  $COMMAND $CREATE_SPACE $SPACEID -o $ORGID
#  $COMMAND delete-user -f $USERID
  $COMMAND $CREATE_USER $USERID $PASSWORD
  $COMMAND $SET_ORG_ROLE $USERID $ORGID OrgManager
  $COMMAND $SET_ORG_ROLE $USERID $ORGID BillingManager
  $COMMAND $SET_ORG_ROLE $USERID $ORGID OrgAuditor
  $COMMAND $SET_SPACE_ROLE $USERID $ORGID $SPACEID SpaceManager
  $COMMAND $SET_SPACE_ROLE $USERID $ORGID $SPACEID SpaceDeveloper
  $COMMAND $SET_SPACE_ROLE $USERID $ORGID $SPACEID SpaceAuditor

echo -e "$ITEM,$FNAME,$LNAME,$EMAIL,$PASSWORD,$STATUS" >> "$RESULT"
fi

done
cat "$RESULT" | column -t -s ","
